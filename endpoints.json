{
  "GET /api": {
    "description": "serves up a json representation of all the available endpoints of the api"
  },
  "GET /api/topics": {
    "description": "serves an array of all topics",
    "queries": [],
    "exampleResponse": {
      "topics": [{ "slug": "football", "description": "Footie!" }]
    }
  },
  "GET /api/articles": {
    "description": "serves an array of all articles",
    "queries": ["author", "topic", "sort_by", "order"],
    "exampleResponse": {
      "articles": [
        {
          "title": "Seafood substitutions are increasing",
          "topic": "cooking",
          "author": "weegembump",
          "body": "Text from the article..",
          "created_at": "2018-05-30T15:59:13.341Z",
          "votes": 0,
          "comment_count": 6,
          "article_img_url": "URL to the image associated with the article"
        }
      ]
    }
  },

  "GET /api/articles/:article_id": {
    "description": "Fetches a single article by its ID",
    "params": {
      "article_id": "The unique ID of the article (must be a number)"
    },
    "example response": {
      "article": {
        "article_id": "The ID of the article",
        "title": "The title of the article",
        "author": "The author of the article",
        "body": "The content of the article",
        "topic": "The topic of the article",
        "created_at": "The date and time when the article was created (ISO string)",
        "votes": "The number of votes the article has received",
        "article_img_url": "URL to the image associated with the article"
      }
    }
  },

  "GET /api/articles/:article_id/comments": {
    "description": "Fetches all comments for a specific article by its ID",
    "params": {
      "article_id": "The unique ID of the article (must be a number)"
    },
    "queries": [],
    "exampleResponse": {
      "comments": [
        {
          "comment_id": 1,
          "votes": 10,
          "created_at": "2024-11-25T10:00:00Z",
          "author": "user1",
          "body": "Great article!",
          "article_id": 1
        },
        {
          "comment_id": 2,
          "votes": 5,
          "created_at": "2024-11-25T11:00:00Z",
          "author": "user2",
          "body": "Very insightful!",
          "article_id": 1
        }
      ]
    }
  },

  "POST /api/articles/:article_id/comments": {
    "description": "Adds a comment to the specified article.",
    "request_body": {
      "username": "string (required) - The username of the user posting the comment.",
      "body": "string (required) - The content of the comment."
    },
    "responses": {
      "201": {
        "description": "Successfully created comment.",
        "body": {
          "comment": {
            "username": "string",
            "body": "string",
            "article_id": "integer",
            "votes": "integer"
          }
        }
      }
    }
  },

  "PATCH /api/articles/:article_id": {
    "description": "Updates an article's vote count by article_id",
    "params": {
      "article_id": "The unique ID of the article (must be a number)"
    },
    "request_body": {
      "inc_votes": "integer (required) - The amount to increment/decrement the votes by."
    },
    "exampleResponse": {
      "article": {
        "article_id": 1,
        "title": "Article Title",
        "author": "Author Name",
        "body": "Content of the article",
        "topic": "Topic",
        "created_at": "2024-11-25T10:00:00Z",
        "votes": 101,
        "article_img_url": "URL to image"
      }
    }
  },

  "DELETE /api/comments/:comment_id": {
    "description": "Deletes a comment by its comment_id.",
    "params": {
      "comment_id": "The unique ID of the comment to be deleted."
    },
    "responses": {
      "204": {
        "description": "Successfully deleted the comment, no content returned."
      },
      "404": {
        "description": "The comment with the provided ID was not found."
      }
    }
  },

  "GET /api/users": {
    "description": "Fetches all users.",
    "responses": {
      "200": {
        "description": "Successfully retrieved a list of all users.",
        "body": {
          "users": [
            {
              "username": "The unique username of the user",
              "name": "The name of the user",
              "avatar_url": "The avatar URL of the user"
            }
          ]
        }
      },
      "404": {
        "description": "No users found or an error occurred."
      }
    }
  }
}
